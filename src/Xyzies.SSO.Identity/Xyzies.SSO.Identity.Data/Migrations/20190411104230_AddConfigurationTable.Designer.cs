// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Xyzies.SSO.Identity.Data;

namespace Xyzies.SSO.Identity.Data.Migrations
{
    [DbContext(typeof(IdentityDataContext))]
    [Migration("20190411104230_AddConfigurationTable")]
    partial class AddConfigurationTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Xyzies.SSO.Identity.Data.Entity.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<Guid?>("StateId");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("Xyzies.SSO.Identity.Data.Entity.Configuration", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Key");

                    b.Property<string>("Value")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Configuration");
                });

            modelBuilder.Entity("Xyzies.SSO.Identity.Data.Entity.PasswordResetRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("PasswordResetRequest");
                });

            modelBuilder.Entity("Xyzies.SSO.Identity.Data.Entity.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsActive");

                    b.Property<string>("Scope")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Xyzies.SSO.Identity.Data.Entity.Policy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Policies");
                });

            modelBuilder.Entity("Xyzies.SSO.Identity.Data.Entity.Relationship.PermissionToPolicy", b =>
                {
                    b.Property<Guid>("Relation1Id")
                        .HasColumnName("PermissionId");

                    b.Property<Guid>("Relation2Id")
                        .HasColumnName("PolicyId");

                    b.HasKey("Relation1Id", "Relation2Id");

                    b.HasIndex("Relation2Id");

                    b.ToTable("PermissionToPolicy");
                });

            modelBuilder.Entity("Xyzies.SSO.Identity.Data.Entity.Relationship.PolicyToRole", b =>
                {
                    b.Property<Guid>("Relation1Id")
                        .HasColumnName("PolicyId");

                    b.Property<Guid>("Relation2Id")
                        .HasColumnName("RoleId");

                    b.HasKey("Relation1Id", "Relation2Id");

                    b.HasIndex("Relation2Id");

                    b.ToTable("PolicyToRole");
                });

            modelBuilder.Entity("Xyzies.SSO.Identity.Data.Entity.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RoleKey");

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<bool>("IsCustom");

                    b.Property<int?>("RoleId");

                    b.Property<string>("RoleName");

                    b.HasKey("Id");

                    b.ToTable("TWC_Role");
                });

            modelBuilder.Entity("Xyzies.SSO.Identity.Data.Entity.State", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("ShortName");

                    b.HasKey("Id");

                    b.ToTable("State");
                });

            modelBuilder.Entity("Xyzies.SSO.Identity.Data.Entity.City", b =>
                {
                    b.HasOne("Xyzies.SSO.Identity.Data.Entity.State", "State")
                        .WithMany()
                        .HasForeignKey("StateId");
                });

            modelBuilder.Entity("Xyzies.SSO.Identity.Data.Entity.Relationship.PermissionToPolicy", b =>
                {
                    b.HasOne("Xyzies.SSO.Identity.Data.Entity.Permission", "Entity1")
                        .WithMany()
                        .HasForeignKey("Relation1Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Xyzies.SSO.Identity.Data.Entity.Policy", "Entity2")
                        .WithMany("RelationToPermission")
                        .HasForeignKey("Relation2Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Xyzies.SSO.Identity.Data.Entity.Relationship.PolicyToRole", b =>
                {
                    b.HasOne("Xyzies.SSO.Identity.Data.Entity.Policy", "Entity1")
                        .WithMany("RelationToRole")
                        .HasForeignKey("Relation1Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Xyzies.SSO.Identity.Data.Entity.Role", "Entity2")
                        .WithMany("RelationToPolicy")
                        .HasForeignKey("Relation2Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
