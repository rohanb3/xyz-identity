<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Xyzies.SSO.Identity.Services</name>
    </assembly>
    <members>
        <member name="T:Xyzies.SSO.Identity.Services.Attributes.FileTypeAttribute">
            <summary>
            Validate file
            </summary>
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Attributes.FileTypeAttribute.#ctor(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="extension"></param>
            <param name="maxSize"></param>
        </member>
        <member name="T:Xyzies.SSO.Identity.Services.Models.Branch.BranchModel">
            <summary>
            Branch model
            </summary>
        </member>
        <member name="P:Xyzies.SSO.Identity.Services.Models.Branch.BranchModel.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Xyzies.SSO.Identity.Services.Models.Branch.BranchModel.CompanyId">
            <summary>
            CompanyId
            </summary>
        </member>
        <member name="T:Xyzies.SSO.Identity.Services.Models.Company.CompanyFilters">
            <summary>
            Filters for getting company from public-api MS
            </summary>
        </member>
        <member name="P:Xyzies.SSO.Identity.Services.Models.Company.CompanyFilters.Name">
            <summary>
            Company Name to get company
            </summary>
        </member>
        <member name="T:Xyzies.SSO.Identity.Services.Models.Company.CompanyModel">
            <summary>
            Company model
            </summary>
        </member>
        <member name="P:Xyzies.SSO.Identity.Services.Models.Company.CompanyModel.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:Xyzies.SSO.Identity.Services.Models.Company.CompanyModel.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Xyzies.SSO.Identity.Services.Models.Company.CompanyModel.RequestStatus">
            <summary>
            Status key from CP
            </summary>
        </member>
        <member name="P:Xyzies.SSO.Identity.Services.Models.Company.CompanyModel.Tenant">
            <summary>
            Company Tenant
            </summary>
        </member>
        <member name="T:Xyzies.SSO.Identity.Services.Models.ResetPasswordOptions">
            <summary>
            Options for reset password service
            </summary>
        </member>
        <member name="P:Xyzies.SSO.Identity.Services.Models.ResetPasswordOptions.ServiceEmailAddress">
            <summary>
            Email address, from which confirmation codes will be sent
            </summary>
        </member>
        <member name="P:Xyzies.SSO.Identity.Services.Models.User.ProfileSecure.Scopes">
            <summary>
            Collection of user's avalible scopes
            </summary>
        </member>
        <member name="T:Xyzies.SSO.Identity.Services.Models.User.UserAuthorizeOptions">
            <summary>
            Represents data for user authorization
            </summary>
        </member>
        <member name="P:Xyzies.SSO.Identity.Services.Models.User.UserAuthorizeOptions.Username">
            <summary>
            Username or login
            </summary>
        </member>
        <member name="P:Xyzies.SSO.Identity.Services.Models.User.UserAuthorizeOptions.Password">
            <summary>
            User password
            </summary>
        </member>
        <member name="P:Xyzies.SSO.Identity.Services.Models.User.UserAuthorizeOptions.Scope">
            <summary>
            User scope
            </summary>
        </member>
        <member name="T:Xyzies.SSO.Identity.Services.Models.User.UserRefreshOptions">
            <summary>
            
            </summary>
        </member>
        <member name="P:Xyzies.SSO.Identity.Services.Models.User.UserRefreshOptions.RefreshToken">
            <summary>
            Token to allow refresh auth token
            </summary>
        </member>
        <member name="T:Xyzies.SSO.Identity.Services.Service.Relation.IRelationService">
            <summary>
            Http clien for communication with microservices
            </summary>
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.Relation.IRelationService.GetCompanyById(System.Int32,System.String)">
            <summary>
            Get company by id
            </summary>
            <param name="id"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.Relation.IRelationService.GetCompanies(System.String,Xyzies.SSO.Identity.Services.Models.Company.CompanyFilters)">
            <summary>
            Get company by passed filters
            </summary>
            <param name="token"></param>
            <param name="filters"></param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.Relation.IRelationService.GetBranchById(System.Guid,System.String)">
            <summary>
            Get branch by id
            </summary>
            <param name="id"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.Relation.IRelationService.GetBranchesAsync(System.String)">
            <summary>
            Get branches
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.Relation.IRelationService.GetBranchesTrustedAsync">
            <summary>
            Get branches by trusted token
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.Relation.IRelationService.GetCompaniesTrustedAsync">
            <summary>
            Get companies by trusted token
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.Relation.IRelationService.GetBranchesByCompanyTrustedAsync(System.Int32)">
            <summary>
            Get branches by company by trusted token
            </summary>
            <param name="companyId"></param>
            <returns></returns>
        </member>
        <member name="T:Xyzies.SSO.Identity.Services.Service.Relation.RelationService">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.Relation.RelationService.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Xyzies.SSO.Identity.Services.Helpers.ServiceOption})">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.Relation.RelationService.GetCompanyById(System.Int32,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.Relation.RelationService.GetBranchById(System.Guid,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.Relation.RelationService.GetCompanies(System.String,Xyzies.SSO.Identity.Services.Models.Company.CompanyFilters)">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.Relation.RelationService.GetBranchesAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.Relation.RelationService.GetBranchesTrustedAsync">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.Relation.RelationService.GetBranchesByCompanyTrustedAsync(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.Relation.RelationService.GetCompaniesTrustedAsync">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.SelectConditions.GetSelectQuery(System.Collections.Generic.List{System.String})">
            <summary>
            Creates a query param string to select passed properties from Azure user entity
            </summary>
            <param name="paramNames">List of user's property names</param>
            <returns></returns>
        </member>
        <member name="T:Xyzies.SSO.Identity.Services.Service.UserService">
            <summary>
            
            </summary>
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.UserService.#ctor(Xyzies.SSO.Identity.Data.Repository.Azure.IAzureAdClient,Microsoft.Extensions.Caching.Memory.IMemoryCache,Xyzies.SSO.Identity.Services.Service.ILocaltionService,Xyzies.SSO.Identity.Services.Service.Relation.IRelationService,Xyzies.SSO.Identity.Data.Repository.IRoleRepository,Xyzies.SSO.Identity.Services.Service.Permission.IPermissionService,Xyzies.SSO.Identity.Data.Repository.IRequestStatusRepository,Xyzies.SSO.Identity.Data.Repository.ICpUsersRepository,Microsoft.Extensions.Options.IOptionsMonitor{Xyzies.SSO.Identity.Services.Models.ProjectSettingsOption})">
            <summary>
            
            </summary>
            <param name="azureClient"></param>
            <param name="cache"></param>
            <param name="localtionService"></param>
            <param name="httpService"></param>
            <param name="roleRepository"></param>
            <param name="permissionService"></param>
            <param name="requestStatusRepository"></param>
            <param name="options"></param>
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.UserService.GetOwnProfile(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.UserService.GetAllUsersAsync(Xyzies.SSO.Identity.Services.Models.User.UserIdentityParams,Xyzies.SSO.Identity.Data.Entity.UserFilteringParams,Xyzies.SSO.Identity.Data.Entity.UserSortingParameters)">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.UserService.UpdateUserByIdAsync(System.String,Xyzies.SSO.Identity.Services.Models.User.BaseProfile)">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.UserService.CreateUserAsync(Xyzies.SSO.Identity.Services.Models.User.ProfileCreatable,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.UserService.GetUserByIdAsync(System.String,Xyzies.SSO.Identity.Services.Models.User.UserIdentityParams)">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.UserService.DeleteUserByIdAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.UserService.GetUsersCountInCompanies(System.Collections.Generic.List{System.String},Xyzies.SSO.Identity.Data.Entity.UserSortingParameters,Xyzies.SSO.Identity.Data.Core.LazyLoadParameters)">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.UserService.SetUsersCache">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.UserService.GetAllUsersFromAzure">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.UserService.UploadAvatar(System.String,Xyzies.SSO.Identity.Services.Models.User.AvatarModel)">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.UserService.DeleteAvatar(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.SSO.Identity.Services.Service.UserService.GetAvatar(System.String)">
            <inheritdoc />
        </member>
    </members>
</doc>
