<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Xyzies.SSO.Identity.API</name>
    </assembly>
    <members>
        <member name="T:Xyzies.SSO.Identity.API.Controllers.RoleController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Xyzies.SSO.Identity.API.Controllers.RoleController.#ctor(Microsoft.Extensions.Logging.ILogger{Xyzies.SSO.Identity.API.Controllers.RoleController},Xyzies.SSO.Identity.Data.Repository.IRoleRepository)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="roleRepository"></param>
        </member>
        <member name="M:Xyzies.SSO.Identity.API.Controllers.RoleController.Get">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xyzies.SSO.Identity.API.Controllers.UsersController.Get">
            <summary>
            Returns collection of users from Active Directory
            </summary>
            <returns>Collection of users</returns>
            <response code="200">If users fetched successfully</response>
            <response code="401">If authorization token is invalid</response>
        </member>
        <member name="M:Xyzies.SSO.Identity.API.Controllers.UsersController.Get(System.String)">
            <summary>
            Get user by his objectId or userPrincipalName
            </summary>
            <param name="id">Azure AD B2C user uniq identifier. Can be objectId of userPrincipalName</param>
            <returns>User with passed identifier, or not found response</returns>
            <response code="200">If user fetched successfully</response>
            <response code="401">If authorization token is invalid</response>
            <response code="404">If user was not found</response>
        </member>
        <member name="M:Xyzies.SSO.Identity.API.Controllers.UsersController.Delete(System.String)">
            <summary>
            Delete user by his objectId or userPrincipalName
            </summary>
            <param name="id">Azure AD B2C user uniq identifier. Can be objectId of userPrincipalName</param>
            <returns>User with passed identifier, or not found response</returns>
            <response code="204">If user deleted successfully</response>
            <response code="401">If authorization token is invalid</response>
            <response code="404">If user was not found</response>
        </member>
        <member name="M:Xyzies.SSO.Identity.API.Controllers.UsersController.Post(Xyzies.SSO.Identity.Service.Models.User.ProfileCreatable)">
            <summary>
            Creates new user
            </summary>
            <param name="userCreatable">User DTO to create</param>
            <returns>URL to newly created user</returns>
            <response code="201">If user fetched successfully</response>
            <response code="401">If authorization token is invalid</response>
        </member>
        <member name="M:Xyzies.SSO.Identity.API.Controllers.UsersController.Patch(System.String,Xyzies.SSO.Identity.Service.Models.User.BaseProfile)">
            <summary>
            Update user properties by objectId or userPrincipalName
            </summary>
            <param name="objectId">objectId or userPrincipalName of Azure AD B2C User</param>
            <param name="userToUpdate">User DTO to update</param>
            <returns>URL to updated user</returns>
            <response code="201">If user updated successfully</response>
            <response code="401">If authorization token is invalid</response>
            <response code="404">If user was not found</response>
        </member>
    </members>
</doc>
